{
  "name": "find-it-faster-fix-fix",
  "displayName": "FindItFasterFix",
  "publisher": "subinoybiswas",
  "icon": "media/icon.png",
  "repository": {
    "url": "https://github.com/subinoybiswas/vscode-finditfaster"
  },
  "description": "Find it, but faster! Leveraging fzf and rg.",
  "keywords": [
    "ag",
    "bat",
    "batcat",
    "find it faster",
    "files",
    "find",
    "finder",
    "fuzzy",
    "fzf",
    "grep",
    "open",
    "rg",
    "ripgrep",
    "search",
    "within"
  ],
  "version": "0.0.31",
  "engines": {
    "vscode": "^1.48.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:find-it-faster-fix.findFiles",
    "onCommand:find-it-faster-fix.findFilesWithType",
    "onCommand:find-it-faster-fix.findWithinFiles",
    "onCommand:find-it-faster-fix.findWithinFilesWithType",
    "onCommand:find-it-faster-fix.listSearchLocations"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "find-it-faster-fix.findFiles",
        "title": "Find It Faster: search file"
      },
      {
        "command": "find-it-faster-fix.findFilesWithType",
        "title": "Find It Faster: search file (with type filter)"
      },
      {
        "command": "find-it-faster-fix.findWithinFiles",
        "title": "Find It Faster: search within files"
      },
      {
        "command": "find-it-faster-fix.findWithinFilesWithType",
        "title": "Find It Faster: search within files (with type filter)"
      },
      {
        "command": "find-it-faster-fix.listSearchLocations",
        "title": "Find It Faster: list search locations (modify in extension settings)"
      },
      {
        "command": "find-it-faster-fix.resumeSearch",
        "title": "Find It Faster: resume last search"
      }
    ],
    "keybindings": [
      {
        "command": "find-it-faster-fix.findFiles",
        "mac": "cmd+shift+j",
        "linux": "ctrl+shift+j"
      },
      {
        "command": "find-it-faster-fix.findWithinFiles",
        "mac": "cmd+shift+u",
        "linux": "ctrl+shift+u"
      },
      {
        "command": "find-it-faster-fix.findWithinFilesWithType",
        "mac": "ctrl+cmd+shift+u",
        "linux": "ctrl+shift+alt+u"
      }
    ],
    "configuration": {
      "title": "FindItFaster",
      "properties": {
        "find-it-faster-fix.general.hideTerminalAfterSuccess": {
          "markdownDescription": "Extensions have limited control over the terminal panel. Ideally, it would be possible to automatically switch back to the previous thing you were doing (e.g. hide the terminal, show the terminal you're working on, show the tasks panel if that's what you were on), but we can't. Select here whether you want the terminal to be hidden or remain shown after invoking a command that fails / is canceled.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.hideTerminalAfterFail": {
          "markdownDescription": "Extensions have limited control over the terminal panel. Ideally, it would be possible to automatically switch back to the previous thing you were doing (e.g. hide the terminal, show the terminal you're working on, show the tasks panel if that's what you were on), but we can't. Select here whether you want the terminal to be hidden or remain shown after invoking a command that succeeds.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.clearTerminalAfterUse": {
          "markdownDescription": "Sends a 'clear' command after invoking a terminal command for a cleaner look",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.killTerminalAfterUse": {
          "markdownDescription": "Kills this extension's terminal such that your previous terminal gets back into focus. Comes with a performance penalty for creating a new terminal on every invocation.",
          "type": "boolean",
          "default": false
        },
        "find-it-faster-fix.general.showMaximizedTerminal": {
          "markdownDescription": "Show the terminal in full screen. Works especially nicely if you set the \"hide after succes / fail\" options in these preferences.",
          "type": "boolean",
          "default": false
        },
        "find-it-faster-fix.general.useGitIgnoreExcludes": {
          "markdownDescription": "Use `.gitignore` entries (if present) to limit search paths",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.useWorkspaceSearchExcludes": {
          "markdownDescription": "In order to speed up VS Code's native search functionality, you can use the `search.exclude` setting. If checked, this extension will honor the same exclude patterns (as long as they follow the standard \"gitignore glob style\" that `rg` uses.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.additionalSearchLocations": {
          "markdownDescription": "Search files in these locations",
          "type": "array",
          "default": []
        },
        "find-it-faster-fix.general.forceBashOnWindows": {
          "markdownDescription": "Toggle if you use Bash on Windows",
          "type": "boolean",
          "default": false
        },
        "find-it-faster-fix.general.additionalSearchLocationsWhen": {
          "markdownDescription": "When to search the files listed in `general.searchLocations`",
          "type": "string",
          "enum": [
            "always",
            "never",
            "noWorkspaceOnly"
          ],
          "enumDescriptions": [
            "Always search these locations",
            "Never search these locations (setting useful for individual workspace overrides)",
            "Only when no workspace is open"
          ],
          "default": "always"
        },
        "find-it-faster-fix.general.searchWorkspaceFolders": {
          "markdownDescription": "Search the folders defined in the workspace",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.searchCurrentWorkingDirectory": {
          "markdownDescription": "Search the current working directory (`process.cwd()`)",
          "type": "string",
          "enum": [
            "always",
            "never",
            "noWorkspaceOnly"
          ],
          "enumDescriptions": [
            "Always search the working directory",
            "Never search the working directory",
            "Only search the working directory when no workspace is open"
          ],
          "default": "noWorkspaceOnly"
        },
        "find-it-faster-fix.general.batTheme": {
          "markdownDescription": "The color theme to use for `bat` (see `bat --list-themes`)",
          "type": "string",
          "default": "1337"
        },
        "find-it-faster-fix.general.openFileInPreviewEditor": {
          "markdownDescription": "When set to `true` files open in a Preview Editor. Use in conjunction with the `workbench.editor.enablePreivew` setting.",
          "type": "boolean",
          "default": false
        },
        "find-it-faster-fix.findFiles.showPreview": {
          "markdownDescription": "Show a preview window when searching files",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.findFiles.previewCommand": {
          "markdownDescription": "When populated: Used by `fzf` to produce the preview. Use `{}` to indicate the filename. Example: `bat {}`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster-fix.findFiles.previewWindowConfig": {
          "markdownDescription": "When populated: Used by `fzf` to determine position and look of the preview window. See the `fzf` documentation. Example for a horizontal split: `top,50%`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster-fix.findWithinFiles.showPreview": {
          "markdownDescription": "Show a preview window when searching within files",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.findWithinFiles.previewCommand": {
          "markdownDescription": "When populated: Used by `fzf` to produce the preview when searching within files. Use `{1}` to indicate the filename, `{2}` for the line number. Example using `cat` and `awk` instead of `bat`: `cat {1} | awk '{if (NR>={2}) print}'`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster-fix.findWithinFiles.previewWindowConfig": {
          "markdownDescription": "When populated: Used by `fzf` to determine position and look of the preview window. See the `fzf` documentation. Example for a horizontal split: `top,50%,border-bottom,+{2}+3/3,~3`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster-fix.findWithinFiles.fuzzRipgrepQuery": {
          "markdownDescription": "By default, matching in \"Find Within Files\" is exact. Enabling this option relaxes the matching by slightly fuzzing the query that is sent to `rg`: it treats whitespaces as wildcards (`.*`). For example, when enabled, the query `function bar` will match `function foobar`. Otherwise, it won't. This setting does not work on Windows at the moment.",
          "type": "boolean",
          "default": false
        },
        "find-it-faster-fix.advanced.disableStartupChecks": {
          "markdownDescription": "By default, we check that you have `fzf`, `rg`, and `bat` on your path. If you'd like to disable these checks because you're getting creative (e.g. use `cat` instead of `bat`), check this box. Obviously you may see errors on your terminal if we do call one of these programs when they are not present!",
          "type": "boolean",
          "default": false
        },
        "find-it-faster-fix.advanced.useEditorSelectionAsQuery": {
          "markdownDescription": "By default, if you have an active editor with a text selection, we'll use that to populate the prompt in `fzf` such that it will start filtering text directly. Uncheck to disable.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster-fix.general.restoreFocusTerminal": {
          "markdownDescription": "When enabled, the extension will restore focus to the previously active terminal after executing a command. This is useful if you frequently switch between the terminal and other parts of VS Code. Note: due to limitations in VS Code, will not focus other panel tabs such as problems/output/etc.",
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc --noEmitOnError --strict -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "vscode:package": "vsce package --githubBranch main",
    "vscode:publish": "vsce publish --githubBranch main",
    "minimist": ">=1.2.6",
    "qs": ">=6.10.3",
    "ansi-regex": ">=5.0.1",
    "nanoid": ">=3.1.31"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/vscode": "^1.48.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^7.27.0",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "typescript": "^4.3.2",
    "vsce": "^1.95.0",
    "vscode-test": "^1.5.2"
  }
}
